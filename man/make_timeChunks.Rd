% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_timeChunks.R
\name{make_timeChunks}
\alias{make_timeChunks}
\title{Make sequences of time intervals}
\usage{
make_timeChunks(date_start, date_end = NULL, period_type = NULL, n = NULL)
}
\arguments{
\item{date_start}{(Required) A vector of length 1 denoting the start date range.
Must be in ymd-compatible format}

\item{date_end}{(Optional) A vector of length 1 denoting the end date range.
If provided, must be in ymd-compatible format. Defaults to current day or overriden by \emph{n}.}

\item{period_type}{(Required) One of \code{days, weeks, months, years} to denote the interval}

\item{n}{(Optional) An integer vector of length 1, dicatating the length of the output.
Overrides \emph{date_end} if both supplied.}
}
\value{
A list of length 2, with named \emph{Date} elements of \code{start, end}. Each respective entity \code{[[i]]}
within each element \code{[i]} describes a pair of start and end periods.
}
\description{
For a start and end date, formatted in 'ymd'-compatible format, create sequences
}
\details{
This is a more flexible version of \link{make_monthChunks}, providing interval granularity of
\emph{days, weeks, months, years}.
}
\examples{
pers <- setNames(nm = c("days", "weeks", "months", "years"))
# Variable length, depending on interval type
lapply(pers, function(f) make_timeChunks(date_start = "2017-01-01", period_type = f))
# Fixed length, using n
lapply(pers, function(f) make_timeChunks(date_start = "2017-01-01", period_type = f, n = 5))
# Output as data.frame
as.data.frame(
  do.call(cbind,
          Map(as.character,
              make_timeChunks(date_start = "2017-01-01",
                              period_type = "weeks",
                              n = 4)
          )
  ),
  stringsAsFactors = FALSE
)
}
